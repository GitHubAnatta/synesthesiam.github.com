<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>synesthesiam (research)</title><link>http://synesthesiam.com</link><description></description><lastBuildDate>Tue, 30 Apr 2013 11:37:19 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>What Makes Code Hard to Understand?</title><link>http://synesthesiam.com/posts/what-makes-code-hard-to-understand.html</link><description>&lt;p&gt;[&lt;a href="http://arxiv.org/abs/1304.5257"&gt;arXiv paper&lt;/a&gt;] [&lt;a href="https://github.com/synesthesiam/eyecode-tools"&gt;eyeCode data set&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;What factors impact the comprehensibility of code? In this blog post, I'll
describe an experiment I did with my advisors &lt;a href="http://osl.iu.edu/~lums/"&gt;Andrew
Lumsdaine&lt;/a&gt; (Computer Science) and &lt;a href="http://cognitrn.psych.indiana.edu/rgoldsto/"&gt;Rob
Goldstone&lt;/a&gt; (Cognitive Science) at
Indiana University.&lt;/p&gt;
&lt;p&gt;We asked 162 programmers to predict the output of &lt;a href="/pages/eyecode-programs.html"&gt;10 small Python
programs&lt;/a&gt;.  Each program had 2 or 3 different
versions, and we used subtle differences between program versions to
demonstrate that seemingly insignificant notational changes can have big
effects on correctness and response times. I'll go over some of the results
here, hopefully to whet your appetite for &lt;a href="http://arxiv.org/abs/1304.5257"&gt;the
paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/what-makes-code-hard-to-understand.html"&gt;Read more...&lt;/a&gt;&lt;/p&gt;</description><guid>http://synesthesiam.com/posts/what-makes-code-hard-to-understand.html</guid><pubDate>Fri, 26 Apr 2013 11:10:01 GMT</pubDate></item><item><title>Modeling How Programmers Read Code</title><link>http://synesthesiam.com/posts/modeling-how-programmers-read-code.html</link><description>&lt;p&gt;As my fellow Ph.D. student &lt;a href="http://blog.theincredibleholk.org/blog/2012/12/18/how-do-we-read-code"&gt;Eric Holk talked about recently in his blog&lt;/a&gt;, I've been running eye-tracking experiments with programmers of different experience levels. In the experiment, a programmer is tasked with predicting the output of 10 short Python programs. A &lt;a href="http://www.tobii.com/en/eye-tracking-research/global/products/hardware/tobii-tx300-eye-tracker"&gt;Tobii TX300 eye tracker&lt;/a&gt; keeps track of their eyes at 300 Hz, allowing me to see where they're spending their time.&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/modeling-how-programmers-read-code.html"&gt;Read more...&lt;/a&gt;&lt;/p&gt;</description><guid>http://synesthesiam.com/posts/modeling-how-programmers-read-code.html</guid><pubDate>Sun, 27 Jan 2013 15:52:13 GMT</pubDate></item></channel></rss>