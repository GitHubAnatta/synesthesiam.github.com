<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>synesthesiam (python)</title><link>http://synesthesiam.com</link><description></description><lastBuildDate>Mon, 22 Apr 2013 15:06:37 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python Recipes</title><link>http://synesthesiam.com/posts/python-recipes.html</link><description>&lt;p&gt;From time to time, I come across or come up with interesting ways to solve problems in Python. To avoid forgetting them, I plan to update this post as I add more recipes to my collection.&lt;/p&gt;
&lt;p&gt;If you know of a better way to do something, let me know!&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/python-recipes.html"&gt;Read more...&lt;/a&gt;&lt;/p&gt;</description><guid>http://synesthesiam.com/posts/python-recipes.html</guid><pubDate>Sat, 02 Mar 2013 10:41:25 GMT</pubDate></item><item><title>matplotlib and numpy: Double Trouble</title><link>http://synesthesiam.com/posts/matplotlib-and-numpy-double-trouble.html</link><description>&lt;p&gt;[&lt;a href="/assets/weather.zip"&gt;Code and Data&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;For this tutorial, we'll be plotting some weather data from a site call &lt;a href="http://www.wunderground.com/"&gt;Weather Underground&lt;/a&gt;. You can download temperature readings and weather events for your local area in a comma-separated file.&lt;/p&gt;
&lt;p&gt;I've put weather data for Bloomington, IN in a file called &lt;tt&gt;weather.csv&lt;/tt&gt;. Each row is one day, and there are columns for min/mean/max temperature, dew point, wind speed, etc. We'll be plotting temperature and weather event data (e.g., rain, snow).&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/matplotlib-and-numpy-double-trouble.html"&gt;Read more...&lt;/a&gt;&lt;/p&gt;</description><guid>http://synesthesiam.com/posts/matplotlib-and-numpy-double-trouble.html</guid><pubDate>Sat, 19 May 2012 13:05:18 GMT</pubDate></item><item><title>An Exercise with Functions and Plotting</title><link>http://synesthesiam.com/posts/an-exercise-with-functions-and-plotting.html</link><description>&lt;p&gt;[&lt;a href="/assets/functions_example.zip"&gt;Code and Data&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Let's say you have a text file called &lt;tt&gt;workout.csv&lt;/tt&gt; that contains information about your workouts for the month of March:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;# date, kind of workout, distance (miles), time (min)
"2012, Mar-01", run, 2, 25
"2012, Mar-03", bike, 10, 55
"2012, Mar-06", bike, 5, 20
"2012, Mar-09", run, 3, 42
"2012, Mar-10", skateboarding, 2, 10

# Broke my leg :(

"2012, Mar-11", Wii, 0, 60
"2012, Mar-12", Wii, 0, 60
"2012, Mar-13", Wii, 0, 60
"2012, Mar-14", Wii, 0, 60
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's a common-separated value (CSV) file, but contains comments and blank lines. The first line (a comment) describes the fields in this file, which are (from left to right) the date of your workout, the kind of workout, how many miles you traveled, and how many minutes you spent (note: I didn't actually break my leg, it's just an example!).&lt;/p&gt;
&lt;p&gt;Our goal will be to read this data into Python and plot a graph with the day of the month on the x-axis and the time worked out on the y-axis. Let's get started.&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/an-exercise-with-functions-and-plotting.html"&gt;Read more...&lt;/a&gt;&lt;/p&gt;</description><guid>http://synesthesiam.com/posts/an-exercise-with-functions-and-plotting.html</guid><pubDate>Fri, 11 May 2012 13:05:18 GMT</pubDate></item></channel></rss>